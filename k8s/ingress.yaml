apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: t24-service-ingress
  namespace: ${NAMESPACE}
  labels:
    app: t24-service
  annotations:
    kubernetes.io/ingress.class: 'alb'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: t24-service-alb
    alb.ingress.kubernetes.io/group.name: t24-services
    # SSL configuration (optional)
    alb.ingress.kubernetes.io/certificate-arn: ${SSL_CERT_ARN}
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    # Health check configuration
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    # CORS configuration for WebSocket
    alb.ingress.kubernetes.io/actions.response-headers: |
      {
        "type": "response-headers",
        "responseHeaders": {
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "GET, POST, PUT, DELETE, OPTIONS",
          "Access-Control-Allow-Headers": "Content-Type, Authorization, X-Requested-With"
        }
      }
spec:
  rules:
    - host: t24-service.your-domain.com # Replace with your domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: t24-service-internal
                port:
                  number: 8080
  # Uncomment if you have SSL certificate
  # tls:
  # - hosts:
  #   - t24-service.your-domain.com
  #   secretName: t24-service-tls
